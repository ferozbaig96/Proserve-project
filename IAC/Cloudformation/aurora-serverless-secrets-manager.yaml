AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS RDS Aurora Serverless Postgresql cluster (port 5432) and Secrets Manager holding Aurora database credentials secret'

# For connecting (sudo yum install postgres -y):
# psql -h <DbEndpoint> -U <username> -d <DbName>

Parameters:
  VpcIdForDb:
    Type: AWS::EC2::VPC::Id
  PrivateSubnetsForDb:
    Type: List<AWS::EC2::Subnet::Id>
  DbName:
    Type: String
    Default: video_db
    MinLength: 1
    MaxLength: 41
  DbUsername:
    Type: String
    Default: master
    MinLength: 1
    MaxLength: 41
  DbPassword:
    NoEcho: true
    Type: String
    MinLength: 1
    MaxLength: 41
  DbTableName:
    Type: String
    Default: videos
    MinLength: 1
    MaxLength: 41
  DbClusterIdentifier:
    Type: String
    Default: video-db-cluster
    MinLength: 1
    MaxLength: 63
    # Constraint for db cluster identifier
    AllowedPattern: ^[a-z](?:(?![-]{2,})[a-z0-9-]){1,62}(?<!-)$

Resources:
  # -- Aurora DB
  DbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub ${AWS::StackName}
      VpcId: !Ref VpcIdForDb
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIpv6: '::/0'
  # DBClusterParameterGroup:
  #   Type: 'AWS::RDS::DBClusterParameterGroup'
  #   Properties:
  #     Description: !Sub ${AWS::StackName}
  #     Family: aurora-postgresql10
  #     Parameters:
  #       # in case any changes have to be made
  #       client_encoding: UTF8  # default
  DBSubnetGroup:
      Type: 'AWS::RDS::DBSubnetGroup'
      Properties:
        DBSubnetGroupDescription: !Sub ${AWS::StackName}
        SubnetIds: !Ref PrivateSubnetsForDb
  DbCluster:
    DeletionPolicy: Snapshot # default
    UpdateReplacePolicy: Snapshot
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      DatabaseName: !Ref DbName
      DBClusterParameterGroupName: default.aurora-postgresql10
      Engine: aurora-postgresql
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 2
        MaxCapacity: 16
        SecondsUntilAutoPause: 300
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterIdentifier: !Ref DbClusterIdentifier
      EnableHttpEndpoint: true
      StorageEncrypted: true
      # DeletionProtection: true
      VpcSecurityGroupIds:
      - !Ref DbSecurityGroup

  # -- Secrets Manager
  SecretRds:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: RDS database secret
      Name: !Sub ${AWS::StackName}/database
      # GenerateSecretString:
      #   IncludeSpace: false
      # todo take value from parameters 
      # SecretString: >
      #   {
      #     "username": "serve_db",
      #     "password": "serve_db",
      #     "engine": "postgres",
      #     "host": "serve-db-cluster.cluster-c7umrsreh09y.us-east-1.rds.amazonaws.com",
      #     "port": 5432,
      #     "dbClusterIdentifier": "serve-db-cluster"
      #   }
      SecretString: !Sub >
        {
          "username": "${DbUsername}",
          "password": "${DbPassword}",
          "engine": "postgres",
          "host": "${DbCluster.Endpoint.Address}",
          "port": ${DbCluster.Endpoint.Port},
          "dbClusterIdentifier": "${AWS::StackName}-DBClusterIdentifier"
        }
  SecretRdsResourcePolicy:
      DependsOn: 
        - SecretRds
        # todo uncomment
        # - LambdaRoleToProcessMessage
      Type: AWS::SecretsManager::ResourcePolicy
      Properties:
        SecretId: !Ref SecretRds
        ResourcePolicy:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: 'secretsmanager:GetSecretValue'
            Resource: '*'
            Principal:
              ## Principal cannot have regex! It must be complete!
              AWS:
                # todo uncomment
                # - !GetAtt LambdaRoleToProcessMessage.Arn
                # todo comment
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            "Condition":
              ForAnyValue:StringEquals:
                secretsmanager:VersionStage: AWSCURRENT

Outputs:
  DbEndpoint:
    Value: !GetAtt DbCluster.Endpoint.Address
  DbClusterArn:
    Value: !Ref DbCluster
